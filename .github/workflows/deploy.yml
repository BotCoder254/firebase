name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Verify Firebase secrets
        env:
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
        run: |
          if [ -z "$FIREBASE_API_KEY" ]; then
            echo "Error: FIREBASE_API_KEY is not set in GitHub Secrets"
            exit 1
          fi
          if [ -z "$FIREBASE_AUTH_DOMAIN" ]; then
            echo "Error: FIREBASE_AUTH_DOMAIN is not set in GitHub Secrets"
            exit 1
          fi
          if [ -z "$FIREBASE_PROJECT_ID" ]; then
            echo "Error: FIREBASE_PROJECT_ID is not set in GitHub Secrets"
            exit 1
          fi
          if [ -z "$FIREBASE_STORAGE_BUCKET" ]; then
            echo "Error: FIREBASE_STORAGE_BUCKET is not set in GitHub Secrets"
            exit 1
          fi
          if [ -z "$FIREBASE_MESSAGING_SENDER_ID" ]; then
            echo "Error: FIREBASE_MESSAGING_SENDER_ID is not set in GitHub Secrets"
            exit 1
          fi
          if [ -z "$FIREBASE_APP_ID" ]; then
            echo "Error: FIREBASE_APP_ID is not set in GitHub Secrets"
            exit 1
          fi
          echo "Firebase secrets verification completed successfully"

      - name: Create Firebase Config
        env:
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
        run: |
          mkdir -p js
          cat > js/firebase-config.js << EOL
          // Firebase configuration - Auto-generated by GitHub Actions
          const firebaseConfig = {
            apiKey: "${FIREBASE_API_KEY}",
            authDomain: "${FIREBASE_AUTH_DOMAIN}",
            projectId: "${FIREBASE_PROJECT_ID}",
            storageBucket: "${FIREBASE_STORAGE_BUCKET}",
            messagingSenderId: "${FIREBASE_MESSAGING_SENDER_ID}",
            appId: "${FIREBASE_APP_ID}"
          };

          // Initialize Firebase
          if (!firebase.apps.length) {
              firebase.initializeApp(firebaseConfig);
          } else {
              firebase.app();
          }

          // Initialize services
          const auth = firebase.auth();
          const db = firebase.firestore();
          const storage = firebase.storage();

          // Enable persistence
          db.enablePersistence()
              .catch((err) => {
                  if (err.code === 'failed-precondition') {
                      console.log('Multiple tabs open, persistence can only be enabled in one tab at a time.');
                  } else if (err.code === 'unimplemented') {
                      console.log('The current browser does not support persistence.');
                  }
              });

          // Configure Firestore settings
          db.settings({
              cacheSizeBytes: firebase.firestore.CACHE_SIZE_UNLIMITED
          });
EOL

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 